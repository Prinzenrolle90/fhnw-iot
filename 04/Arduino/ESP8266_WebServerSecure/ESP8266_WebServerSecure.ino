#include <ESP8266WiFi.h>
#include <ESP8266WebServerSecure.h>

const char *ssid = "MY_SSID"; // TODO
const char *password = "MY_PASSWORD"; // TODO
const int port = 443;

ESP8266WebServerSecure server(port);

// TODO: create your own self signed certificate
// $ openssl req -x509 -nodes -newkey rsa:2048 -keyout key.pem -out cert.pem -days 4096
// $ openssl x509 -outform der -in cert.pem -out cert.der
static const uint8_t x509[] PROGMEM = {
  0x30, 0x82, 0x02, 0xe6, 0x30, 0x82, 0x01, 0xce, 0x02, 0x09, 0x00, 0xd2, 0x23, 0x25, 0x36, 0xbc,
  0xdb, 0x28, 0xc9, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b,
  0x05, 0x00, 0x30, 0x35, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43,
  0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x09, 0x5a, 0xc3, 0x83, 0xc2,
  0xbc, 0x72, 0x69, 0x63, 0x68, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09,
  0x5a, 0xc3, 0x83, 0xc2, 0xbc, 0x72, 0x69, 0x63, 0x68, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x39, 0x30,
  0x33, 0x31, 0x31, 0x30, 0x37, 0x33, 0x36, 0x33, 0x34, 0x5a, 0x17, 0x0d, 0x33, 0x30, 0x30, 0x35,
  0x32, 0x38, 0x30, 0x37, 0x33, 0x36, 0x33, 0x34, 0x5a, 0x30, 0x35, 0x31, 0x0b, 0x30, 0x09, 0x06,
  0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,
  0x08, 0x0c, 0x09, 0x5a, 0xc3, 0x83, 0xc2, 0xbc, 0x72, 0x69, 0x63, 0x68, 0x31, 0x12, 0x30, 0x10,
  0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x09, 0x5a, 0xc3, 0x83, 0xc2, 0xbc, 0x72, 0x69, 0x63, 0x68,
  0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
  0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
  0x00, 0xce, 0xa0, 0xf5, 0x59, 0x0c, 0x52, 0x91, 0xc3, 0x1c, 0xd3, 0xd9, 0x76, 0x78, 0x5a, 0xd9,
  0x4d, 0xc4, 0xc2, 0xe5, 0x95, 0xfd, 0x9e, 0x75, 0xc7, 0x4a, 0x34, 0x30, 0xd2, 0x76, 0x48, 0xe4,
  0x7d, 0xf7, 0xa7, 0x85, 0xa9, 0x95, 0x24, 0x6b, 0xfc, 0xef, 0x05, 0x8f, 0x9b, 0xe4, 0xa6, 0x40,
  0xa8, 0x2a, 0xe2, 0x84, 0x13, 0x91, 0x31, 0x62, 0xbe, 0x9a, 0x67, 0xd9, 0xcc, 0x2d, 0xc1, 0x94,
  0x41, 0x25, 0xfb, 0xb6, 0x19, 0x3e, 0x16, 0x5a, 0xa5, 0x17, 0xc1, 0x34, 0x3d, 0x9e, 0x43, 0x17,
  0xcc, 0x52, 0xbd, 0x4c, 0xc5, 0xde, 0x7d, 0x77, 0x65, 0x81, 0x40, 0xf7, 0xfc, 0x77, 0x04, 0x89,
  0xcb, 0x5f, 0xf8, 0x8a, 0x00, 0xf7, 0xca, 0xb7, 0x35, 0x00, 0x1d, 0x92, 0x0e, 0x02, 0x88, 0x6a,
  0x5e, 0xa0, 0x51, 0x66, 0xc0, 0x68, 0xbb, 0xe3, 0xa7, 0x5a, 0x3d, 0x49, 0x39, 0x34, 0x03, 0xa3,
  0x58, 0x2b, 0x4e, 0xc8, 0x01, 0x3a, 0x5e, 0x52, 0xab, 0x1c, 0x83, 0x62, 0x10, 0x18, 0xd4, 0xd0,
  0xcd, 0xcb, 0x76, 0xf0, 0xcc, 0xfe, 0xe8, 0xf0, 0x34, 0x9c, 0xe2, 0xfa, 0x74, 0xd8, 0x94, 0x99,
  0x05, 0x1e, 0x1b, 0x8f, 0x65, 0x20, 0x9a, 0x49, 0x67, 0x3c, 0xb2, 0xb8, 0xc4, 0x86, 0xa5, 0x1a,
  0x1a, 0x1d, 0x35, 0xe4, 0xe5, 0x13, 0xc0, 0x42, 0x0b, 0x5b, 0x15, 0x27, 0x3c, 0xbb, 0xc8, 0x57,
  0x4c, 0x45, 0x43, 0x99, 0x23, 0x6b, 0x35, 0x27, 0x2f, 0x14, 0x18, 0x0d, 0x22, 0xf9, 0xe3, 0x68,
  0x96, 0xcf, 0x71, 0x6b, 0x11, 0xe1, 0xbc, 0xd6, 0x53, 0x5f, 0xb0, 0x65, 0x08, 0x65, 0x59, 0x8f,
  0x3b, 0x95, 0x53, 0x65, 0x43, 0xc6, 0x24, 0xbb, 0x54, 0x89, 0x5a, 0xe1, 0xb9, 0x76, 0xa8, 0x51,
  0x76, 0x52, 0x5c, 0xd1, 0x2f, 0x80, 0xd1, 0x1f, 0x8a, 0x16, 0xfd, 0x3e, 0xca, 0x3f, 0xaf, 0xd5,
  0x67, 0x02, 0x03, 0x01, 0x00, 0x01, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d,
  0x01, 0x01, 0x0b, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x3c, 0x98, 0x71, 0x96, 0x70, 0x36,
  0xe3, 0x11, 0xed, 0x08, 0x4b, 0xb9, 0xc6, 0x86, 0x35, 0x34, 0x23, 0x32, 0xed, 0x05, 0xd4, 0xd1,
  0x83, 0xa5, 0xbf, 0xb9, 0x39, 0xf4, 0x5a, 0x26, 0x9e, 0x12, 0x5c, 0xd6, 0xf4, 0x8c, 0x20, 0x36,
  0xbe, 0x4f, 0x19, 0x35, 0xa8, 0xfc, 0x93, 0xda, 0x9a, 0xbe, 0x84, 0x08, 0xaa, 0x77, 0xd8, 0x86,
  0xf2, 0xc6, 0xe1, 0x27, 0x3e, 0x31, 0xd6, 0x41, 0x72, 0xd6, 0x40, 0xf8, 0x12, 0x57, 0x47, 0x96,
  0x2f, 0x29, 0xc7, 0x92, 0x03, 0x2c, 0xf5, 0x08, 0x46, 0x87, 0x29, 0xef, 0xfb, 0x1c, 0x11, 0xac,
  0xe5, 0x55, 0xc3, 0x37, 0x5a, 0x37, 0x36, 0x7b, 0x9e, 0x68, 0xc8, 0x94, 0x4f, 0x1d, 0x56, 0xc2,
  0xd7, 0x67, 0xaa, 0xc0, 0x7f, 0x7f, 0xdb, 0xe1, 0x96, 0xea, 0x8d, 0x62, 0x29, 0x80, 0xce, 0xbc,
  0xf5, 0x0e, 0x86, 0x4c, 0x06, 0x01, 0xa6, 0xc4, 0xa7, 0x7c, 0xe4, 0xf1, 0x42, 0x38, 0x8f, 0x1e,
  0x3d, 0x2f, 0x97, 0x34, 0x48, 0x7a, 0x96, 0x7d, 0xd2, 0x73, 0x65, 0x05, 0x4a, 0x3c, 0x11, 0xb7,
  0x4a, 0x1a, 0x40, 0x22, 0x17, 0x8d, 0x7d, 0xf8, 0x72, 0x5e, 0x46, 0x07, 0x50, 0xcb, 0xfb, 0x71,
  0x28, 0x9e, 0x13, 0xed, 0x52, 0xd4, 0xd0, 0x7a, 0x71, 0xc9, 0x29, 0xec, 0xe2, 0xb9, 0xf3, 0x30,
  0x56, 0xad, 0x76, 0xd1, 0xfd, 0x1a, 0x5e, 0x99, 0xec, 0x77, 0x64, 0xd1, 0xf9, 0xa6, 0x11, 0xc0,
  0x46, 0x6a, 0xaf, 0xe2, 0x7f, 0x79, 0x7e, 0x13, 0x3a, 0xa1, 0x3b, 0xbf, 0x89, 0x22, 0x45, 0x45,
  0xe1, 0x3d, 0x9d, 0xe2, 0xda, 0x3b, 0x49, 0x43, 0x0a, 0x76, 0x81, 0xf4, 0xe4, 0xe3, 0x7a, 0x64,
  0x7d, 0xa7, 0x87, 0x20, 0x6e, 0x00, 0x81, 0xcb, 0x54, 0x5b, 0xb8, 0x17, 0xe7, 0xa0, 0xdd, 0x73,
  0xe0, 0xa1, 0x03, 0x59, 0xd2, 0xb3, 0x35, 0x65, 0xbf, 0x28
};

// $ openssl rsa -in key.pem -pubout -outform DER -out key.der
static const uint8_t rsaKey[] PROGMEM = {
  0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
  0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
  0x00, 0xce, 0xa0, 0xf5, 0x59, 0x0c, 0x52, 0x91, 0xc3, 0x1c, 0xd3, 0xd9, 0x76, 0x78, 0x5a, 0xd9,
  0x4d, 0xc4, 0xc2, 0xe5, 0x95, 0xfd, 0x9e, 0x75, 0xc7, 0x4a, 0x34, 0x30, 0xd2, 0x76, 0x48, 0xe4,
  0x7d, 0xf7, 0xa7, 0x85, 0xa9, 0x95, 0x24, 0x6b, 0xfc, 0xef, 0x05, 0x8f, 0x9b, 0xe4, 0xa6, 0x40,
  0xa8, 0x2a, 0xe2, 0x84, 0x13, 0x91, 0x31, 0x62, 0xbe, 0x9a, 0x67, 0xd9, 0xcc, 0x2d, 0xc1, 0x94,
  0x41, 0x25, 0xfb, 0xb6, 0x19, 0x3e, 0x16, 0x5a, 0xa5, 0x17, 0xc1, 0x34, 0x3d, 0x9e, 0x43, 0x17,
  0xcc, 0x52, 0xbd, 0x4c, 0xc5, 0xde, 0x7d, 0x77, 0x65, 0x81, 0x40, 0xf7, 0xfc, 0x77, 0x04, 0x89,
  0xcb, 0x5f, 0xf8, 0x8a, 0x00, 0xf7, 0xca, 0xb7, 0x35, 0x00, 0x1d, 0x92, 0x0e, 0x02, 0x88, 0x6a,
  0x5e, 0xa0, 0x51, 0x66, 0xc0, 0x68, 0xbb, 0xe3, 0xa7, 0x5a, 0x3d, 0x49, 0x39, 0x34, 0x03, 0xa3,
  0x58, 0x2b, 0x4e, 0xc8, 0x01, 0x3a, 0x5e, 0x52, 0xab, 0x1c, 0x83, 0x62, 0x10, 0x18, 0xd4, 0xd0,
  0xcd, 0xcb, 0x76, 0xf0, 0xcc, 0xfe, 0xe8, 0xf0, 0x34, 0x9c, 0xe2, 0xfa, 0x74, 0xd8, 0x94, 0x99,
  0x05, 0x1e, 0x1b, 0x8f, 0x65, 0x20, 0x9a, 0x49, 0x67, 0x3c, 0xb2, 0xb8, 0xc4, 0x86, 0xa5, 0x1a,
  0x1a, 0x1d, 0x35, 0xe4, 0xe5, 0x13, 0xc0, 0x42, 0x0b, 0x5b, 0x15, 0x27, 0x3c, 0xbb, 0xc8, 0x57,
  0x4c, 0x45, 0x43, 0x99, 0x23, 0x6b, 0x35, 0x27, 0x2f, 0x14, 0x18, 0x0d, 0x22, 0xf9, 0xe3, 0x68,
  0x96, 0xcf, 0x71, 0x6b, 0x11, 0xe1, 0xbc, 0xd6, 0x53, 0x5f, 0xb0, 0x65, 0x08, 0x65, 0x59, 0x8f,
  0x3b, 0x95, 0x53, 0x65, 0x43, 0xc6, 0x24, 0xbb, 0x54, 0x89, 0x5a, 0xe1, 0xb9, 0x76, 0xa8, 0x51,
  0x76, 0x52, 0x5c, 0xd1, 0x2f, 0x80, 0xd1, 0x1f, 0x8a, 0x16, 0xfd, 0x3e, 0xca, 0x3f, 0xaf, 0xd5,
  0x67, 0x02, 0x03, 0x01, 0x00, 0x01
};

void handleRoot() {
  server.send(200, "text/plain", "It works!");
}

void setup() {
  Serial.begin(115200);
  Serial.print("\nConnecting to network ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
  Serial.print("Connected to network, local IP = "); 
  Serial.println(WiFi.localIP());

  server.setServerKeyAndCert_P(
    rsaKey, sizeof(rsaKey), x509, sizeof(x509));
  server.on("/", handleRoot);
  server.begin();
  Serial.print("Listening on port ");
  Serial.println(port);
}

void loop() {
  server.handleClient();
}
